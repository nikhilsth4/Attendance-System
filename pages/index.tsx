import moment, { Moment } from "moment"
import { NextPage } from "next"
import Head from "next/head"
import { useRouter } from "next/router"
import React from "react"
import { toast } from "react-toastify"
import AttendanceDetail from "../components/AttendanceDetail"
import Button from "../components/Button.tsx"
import { AttendanceInterface, UserInterface } from "../interfaces"
import styles from "../styles/Home.module.css"

const Home: NextPage = () => {
  const router = useRouter()
  const [user, setUser] = React.useState<UserInterface>({} as UserInterface)
  const [attendances, setAttendances] = React.useState<AttendanceInterface[]>(
    []
  )
  const [allAttendances, setAllAttendances] = React.useState<
    AttendanceInterface[]
  >([])

  React.useEffect(() => {
    const loggedInUser: UserInterface = JSON.parse(
      localStorage.getItem("user") || "{}"
    )
    const regAttendances: AttendanceInterface[] = JSON.parse(
      localStorage.getItem("attendances") || "[]"
    )
    const userAttendances = regAttendances?.filter(
      (attendance) => attendance.username === loggedInUser.username
    )

    if (!loggedInUser?.username && !loggedInUser?.password) {
      router.push("/login")
    }
    setAllAttendances(regAttendances)
    setUser(loggedInUser)
    setAttendances(userAttendances)
  }, [])

  const onDelete = (date: Date | Moment) => {
    const newAllAttendances = allAttendances.filter(
      (attendance) =>
        moment(attendance.date) !== moment(date) &&
        user.username !== attendance.username
    )

    const newAttendances = attendances.filter(
      (attendance) =>
        moment(attendance.date) !== moment(date) &&
        user.username !== attendance.username
    )
    localStorage.setItem("attendances", JSON.stringify(newAllAttendances))
    toast.success("Deleted successfully")
    setAllAttendances(newAllAttendances)
    return setAttendances(newAttendances)
  }

  const onLogoutClick = () => {
    localStorage.setItem("user", JSON.stringify({}))
    toast.success("Logged Out successfully")
    return router.push("/login")
  }

  const onFormSubmit = (
    e: React.SyntheticEvent,
    formData: AttendanceInterface
  ) => {
    e.preventDefault()
    const newAllAttendances = allAttendances.map((attendance) => {
      if (attendance.date === formData.date) {
        if (attendance.username === formData.username) {
          return formData
        }
      }
      return attendance
    })

    const newAttendances = attendances.map((attendance) => {
      if (attendance.date === formData.date) {
        if (attendance.username === formData.username) {
          return formData
        }
      }
      return attendance
    })

    localStorage.setItem("attendances", JSON.stringify(newAllAttendances))
    toast.success("Attendance updated successfully")
    setAllAttendances(newAllAttendances)
    return setAttendances(newAttendances)
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Attendance System</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.topBar}>
          <Button
            title="Logout"
            size="md"
            color="accent"
            onClick={onLogoutClick}
          />
        </div>
        {attendances?.length > 0 ? (
          <div className={styles.attendanceDetailContainer}>
            {attendances.map((attendance) => (
              <div
                className={styles.attendanceDetail}
                key={Number(attendance.date)}
              >
                <AttendanceDetail
                  date={attendance.date}
                  checkedIn={attendance.checkedIn}
                  checkedOut={attendance.checkedOut}
                  onDelete={onDelete}
                  attendance={attendance}
                  onFormSubmit={onFormSubmit}
                />
              </div>
            ))}
          </div>
        ) : (
          <div className={styles.noAttendanceContainer}>
            <h1 className={styles.noAttendance}>
              Please Add the attendance first....
            </h1>
          </div>
        )}
      </main>
    </div>
  )
}

export default Home
